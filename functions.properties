#Thu Dec 31 12:20:02 BRST 2015
FUNCTIONS_QUANTITY=16
FUNCTION_EXPRESSION_000_EXPRESSION=return eval.environment.feeders.size()
FUNCTION_EXPRESSION_000_NAME=Total number of feeders
FUNCTION_EXPRESSION_000_TYPE=System Summary
FUNCTION_EXPRESSION_001_EXPRESSION=return eval.environment.loads.size()
FUNCTION_EXPRESSION_001_NAME=Total number of loads
FUNCTION_EXPRESSION_001_TYPE=System Summary
FUNCTION_EXPRESSION_002_EXPRESSION=return eval.environment.branches.size()
FUNCTION_EXPRESSION_002_NAME=Total number of branches
FUNCTION_EXPRESSION_002_TYPE=System Summary
FUNCTION_EXPRESSION_003_EXPRESSION=return eval.environment.switches.size()
FUNCTION_EXPRESSION_003_NAME=Total number of switches
FUNCTION_EXPRESSION_003_TYPE=System Summary
FUNCTION_EXPRESSION_004_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\n\nreturn df.format(eval.environment.loads.stream()\n\t\t.filter(function(load) { return load.isOn(); })\n\t\t.mapToDouble(function(load) { return load.getActivePower(); }).sum())
FUNCTION_EXPRESSION_004_NAME=Total active power demand (kW)
FUNCTION_EXPRESSION_004_TYPE=System Summary
FUNCTION_EXPRESSION_005_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\r\n\r\nreturn df.format(eval.environment.loads.stream()\r\n\t\t.filter(function(load) { return load.isOn(); })\r\n\t\t.mapToDouble(function(load) { return load.getReactivePower(); }).sum())
FUNCTION_EXPRESSION_005_NAME=Total reactive power demand (kW)
FUNCTION_EXPRESSION_005_TYPE=System Summary
FUNCTION_EXPRESSION_006_EXPRESSION=return eval.environment.loads.stream()\n\t.filter(function(load) { return load.isSupplied() }).count();
FUNCTION_EXPRESSION_006_NAME=Loads supplied
FUNCTION_EXPRESSION_006_TYPE=Power Flow
FUNCTION_EXPRESSION_007_EXPRESSION=return eval.environment.loads.stream()\r\n\t.filter(function(load) { return \!load.isOn() }).count();
FUNCTION_EXPRESSION_007_NAME=Loads out-of-service
FUNCTION_EXPRESSION_007_TYPE=Power Flow
FUNCTION_EXPRESSION_008_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\n\nreturn df.format(eval.environment.loads.stream()\r\n\t\t.filter(function(load) { return load.isOn() && load.isSupplied(); })\r\n\t\t.mapToDouble(function(load) { return load.getActivePower(); }).sum())
FUNCTION_EXPRESSION_008_NAME=Loads active power supplied (kW)
FUNCTION_EXPRESSION_008_TYPE=Power Flow
FUNCTION_EXPRESSION_009_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\r\n\r\nreturn df.format(eval.environment.loads.stream()\r\t\t.filter(function(load) { return load.isOn() && load.isSupplied(); })\r\t\t.mapToDouble(function(load) { return load.getReactivePower(); }).sum())
FUNCTION_EXPRESSION_009_NAME=Loads reactive power supplied (kW)
FUNCTION_EXPRESSION_009_TYPE=Power Flow
FUNCTION_EXPRESSION_010_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\r\n\r\nreturn df.format(eval.environment.loads.stream()\r\t\t.filter(function(load) { return \!load.isOn() || \!load.isSupplied(); })\r\t\t.mapToDouble(function(load) { return load.getActivePower(); }).sum())
FUNCTION_EXPRESSION_010_NAME=Loads active power out-of-service (kW)
FUNCTION_EXPRESSION_010_TYPE=Power Flow
FUNCTION_EXPRESSION_011_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\r\n\r\nreturn df.format(eval.environment.loads.stream()\r\t\t.filter(function(load) { return \!load.isOn() || \!load.isSupplied(); })\r\t\t.mapToDouble(function(load) { return load.getReactivePower(); }).sum())
FUNCTION_EXPRESSION_011_NAME=Loads reactive power out-of-service (kW)
FUNCTION_EXPRESSION_011_TYPE=Power Flow
FUNCTION_EXPRESSION_012_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\r\n\r\nreturn df.format(eval.environment.feeders.stream()\n\t.mapToDouble(function (feeder) { return feeder.getUsedPower() }).sum())
FUNCTION_EXPRESSION_012_NAME=Feeders used power
FUNCTION_EXPRESSION_012_TYPE=Power Flow
FUNCTION_EXPRESSION_013_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.000");\r\n\r\nreturn df.format(eval.environment.feeders.stream()\n\t.mapToDouble(function (feeder) { return feeder.getAvailablePower() }).sum())
FUNCTION_EXPRESSION_013_NAME=Feeders available power
FUNCTION_EXPRESSION_013_TYPE=Power Flow
FUNCTION_EXPRESSION_014_EXPRESSION=var df \= new java.text.DecimalFormat("\#\#0.00000");\n\nreturn df.format(eval.environment.branches.stream()\n\t\t.filter(function(branch) { return branch.isClosed(); })\n\t\t.mapToDouble(function(branch) { return branch.getLossesMW(); }).sum())
FUNCTION_EXPRESSION_014_NAME=Total Power Lost (MW)
FUNCTION_EXPRESSION_014_TYPE=Power Flow
FUNCTION_EXPRESSION_015_EXPRESSION=var df \= new java.text.DecimalFormat("\#,\#\#0");\r\nvar switchOperations \= 0;\r\r\neval.environment.branches.forEach(function(branch) { \r\r\r\n\t switchOperations +\= branch.getSwitchOperations();\r\r\n});\r\r\nreturn df.format(switchOperations);
FUNCTION_EXPRESSION_015_NAME=Switching Operations
FUNCTION_EXPRESSION_015_TYPE=Objective Functions
