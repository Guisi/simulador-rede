#Tue Sep 01 21:26:40 BRT 2015
FUNCTIONS_QUANTITY=14
FUNCTION_EXPRESSION_0_EXPRESSION=return eval.environment.feeders.size()
FUNCTION_EXPRESSION_0_NAME=Total number of feeders
FUNCTION_EXPRESSION_0_TYPE=System Summary
FUNCTION_EXPRESSION_10_EXPRESSION=var df \= new java.text.DecimalFormat(Java.type("br.com.guisi.simulador.rede.constants.Constants").POWER_DECIMAL_FORMAT);\r\n\r\nreturn df.format(eval.environment.loads.stream()\r\n\t\t.filter(function(load) { return load.isOn() })\r\n\t\t.mapToDouble(function(load) { return load.getPowerNotSupplied() }).sum())
FUNCTION_EXPRESSION_10_NAME=Loads power not supplied
FUNCTION_EXPRESSION_10_TYPE=Power Flow
FUNCTION_EXPRESSION_11_EXPRESSION=var df \= new java.text.DecimalFormat(Java.type("br.com.guisi.simulador.rede.constants.Constants").POWER_DECIMAL_FORMAT);\r\n\r\nreturn df.format(eval.environment.feeders.stream()\n\t.mapToDouble(function (feeder) { return feeder.getUsedPower() }).sum())
FUNCTION_EXPRESSION_11_NAME=Feeders used power
FUNCTION_EXPRESSION_11_TYPE=Power Flow
FUNCTION_EXPRESSION_12_EXPRESSION=var df \= new java.text.DecimalFormat(Java.type("br.com.guisi.simulador.rede.constants.Constants").POWER_DECIMAL_FORMAT);\r\n\r\nreturn df.format(eval.environment.feeders.stream()\n\t.mapToDouble(function (feeder) { return feeder.getAvailablePower() }).sum())
FUNCTION_EXPRESSION_12_NAME=Feeders available power
FUNCTION_EXPRESSION_12_TYPE=Power Flow
FUNCTION_EXPRESSION_13_EXPRESSION=return eval.environment.branches.stream()\n\t.mapToInt(function (branch) { branch.getSwitchOperations() }).sum()
FUNCTION_EXPRESSION_13_NAME=Switching Operations
FUNCTION_EXPRESSION_13_TYPE=Objective Functions
FUNCTION_EXPRESSION_1_EXPRESSION=return eval.environment.loads.size()
FUNCTION_EXPRESSION_1_NAME=Total number of loads
FUNCTION_EXPRESSION_1_TYPE=System Summary
FUNCTION_EXPRESSION_2_EXPRESSION=return eval.environment.branches.size()
FUNCTION_EXPRESSION_2_NAME=Total number of branches
FUNCTION_EXPRESSION_2_TYPE=System Summary
FUNCTION_EXPRESSION_3_EXPRESSION=return eval.environment.switches.size()
FUNCTION_EXPRESSION_3_NAME=Total number of switches
FUNCTION_EXPRESSION_3_TYPE=System Summary
FUNCTION_EXPRESSION_4_EXPRESSION=var df \= new java.text.DecimalFormat(Java.type("br.com.guisi.simulador.rede.constants.Constants").POWER_DECIMAL_FORMAT);\n\nreturn df.format(eval.environment.loads.stream()\n\t\t.filter(function(load) { return load.isOn(); })\n\t\t.mapToDouble(function(load) { return load.getPower(); }).sum())
FUNCTION_EXPRESSION_4_NAME=Total demand
FUNCTION_EXPRESSION_4_TYPE=System Summary
FUNCTION_EXPRESSION_5_EXPRESSION=return eval.environment.loads.stream()\n\t.filter(function(load) { return load.isSupplied() }).count();
FUNCTION_EXPRESSION_5_NAME=Loads supplied
FUNCTION_EXPRESSION_5_TYPE=Power Flow
FUNCTION_EXPRESSION_6_EXPRESSION=return eval.environment.loads.stream()\n\t.filter(function(load) { return load.isPartiallySupplied() }).count();
FUNCTION_EXPRESSION_6_NAME=Loads partially supplied
FUNCTION_EXPRESSION_6_TYPE=Power Flow
FUNCTION_EXPRESSION_7_EXPRESSION=return eval.environment.loads.stream()\r\n\t.filter(function(load) { return load.isNotSupplied() }).count();
FUNCTION_EXPRESSION_7_NAME=Loads not supplied
FUNCTION_EXPRESSION_7_TYPE=Power Flow
FUNCTION_EXPRESSION_8_EXPRESSION=return eval.environment.loads.stream()\r\n\t.filter(function(load) { return \!load.isOn() }).count();
FUNCTION_EXPRESSION_8_NAME=Loads out-of-service
FUNCTION_EXPRESSION_8_TYPE=Power Flow
FUNCTION_EXPRESSION_9_EXPRESSION=var df \= new java.text.DecimalFormat(Java.type("br.com.guisi.simulador.rede.constants.Constants").POWER_DECIMAL_FORMAT);\n\nreturn df.format(eval.environment.loads.stream()\n\t.mapToDouble(function(load) { return load.getPowerSupplied(); }).sum())
FUNCTION_EXPRESSION_9_NAME=Loads power supplied
FUNCTION_EXPRESSION_9_TYPE=Power Flow
